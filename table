테이블 구성

1. member (구매자, 회원정보) - 회원가입시 생성
2. shop (상점) - 회원가입시 생성 
3. item (상품정보) - 포스팅시 생성
4. img (상품이미지) - 상품등록시 같이 생성
5. review (후기) - 후기 작성시 생성
6. wish (찜) - 좋아요 클릭시 생성
7. ord (주문) - 상품 결제시 생성
8. mainCategory (메인화면 카테고리) - 조회수 측정 (사용안함)
9. category (카테고리) - 장바구니 담기 클릭시 생성
10. coupon (쿠폰) - 회원가입시 
11. follow (팔로우) - 팔로우 신청시 생성
12. coin (코인) - 결제 완료시 생성
13. safe (금고) - 상품 결제시 생성
14. recentView (최근조회) - 상품 조회시 생성
15. payment (결제) - 코은 충전을 위한 결제시 생성
16. notice (공지사항) - 공지 등록시 생성
17. qna (문의) - 문의 등록시 생성
18. report (신고) - 신고 작성시 생성
19. msgList (메시지 목록) - 1:1문의하기 클릭시 생성
20. msgChat (메시지 내용) - 메시지 내용 전달시 생성
21. cancel (취소) - 상품 취소시 생성
22. account (계좌정보) - 계좌 등록시 생성



CREATE TABLE member (
	member_id varchar(50) PRIMARY KEY,
	member_pass varchar(100) NOT NULL,
	member_email varchar(50) NOT NULL UNIQUE,
	member_phone varchar(13) NOT NULL,
	member_nick varchar(20) NOT NULL,
	member_logo varchar(20),
	member_birth varchar(14) NOT NULL,
	member_date varchar(20) NOT NULL,
	member_status varchar(20) NOT NULL
);

CREATE TABLE shop (
	shop_idx varchar(20),
	member_id varchar(50),
	shop_name varchar(20) NOT NULL,
	shop_img varchar(100),
	shop_content varchar(50) NOT NULL,
	PRIMARY KEY (shop_idx ,member_id)
);

CREATE TABLE item (
	item_idx varchar(20),
	shop_idx varchar(20),
	item_title varchar(20) NOT NULL,
	item_content varchar(2000) NOT NULL,
	item_price varchar(20) NOT NULL,
	item_date varchar(20) NOT NULL,
	item_endDate varchar(20),
	item_status varchar(3) NOT NULL,
	item_hide varchar(3) NOT NULL,
	item_readCnt varchar(20) NOT NULL,
	item_region varchar(40) NOT NULL,
	item_quantity varchar(10) NOT NULL,
	PRIMARY KEY (item_idx ,shop_idx) 
);

CREATE TABLE img(
	img_idx varchar(20),
	item_idx varchar(20),
	img_real_name varchar(50),
	img_name varchar(100),
	PRIMARY KEY (img_idx ,item_idx) 
);

CREATE TABLE review (
	review_idx varchar(20),
   	member_id varchar(50),
   	item_idx varchar(20),
	ord_idx varchar(20),
   	review_content varchar(1000) NOT NULL,
	review_score varchar(10) NOT NULL,
   	review_date varchar(20) NOT NULL,
   	PRIMARY KEY (review_idx, item_idx ,member_id)  
);

CREATE TABLE wish (
	item_idx varchar(20),
	member_id varchar(50),
	PRIMARY KEY (item_idx, member_id) 
);

CREATE TABLE ord (
	ord_idx VARCHAR(20),
	item_idx varchar(20),
	member_id varchar(50),
	ord_date varchar(20) NOT NULL,
	ord_reqContent varchar(1000),
	ord_quantity varchar(10) NOT NULL,
	ord_status varchar(5) NOT NULL,
	PRIMARY KEY (ord_idx,item_idx,member_id)
);



CREATE TABLE mainCategory (
	category_big varchar(20) PRIMARY KEY,
	category_big_readCnt varchar(20)
);

CREATE TABLE category  (
	category_big varchar(20),
	category_small varchar(20),
	item_idx varchar(20),
	PRIMARY KEY (category_big, category_small, item_idx)
);


CREATE TABLE coupon (
	coupon_idx varchar(20),
	member_id varchar(50),
	item_idx varchar(20),
	coupon_title varchar(50) NOT NULL,
	coupon_content varchar(100) NOT NULL,
	coupon_price varchar(50) NOT NULL,
	coupon_status varchar(3),
	PRIMARY KEY (coupon_idx, member_id)
);

CREATE TABLE follow (
	member_id varchar(50),
	shop_idx varchar(20),
	PRIMARY KEY (member_id, shop_idx)
);


CREATE TABLE coin (
    coin_idx VARCHAR(50),
    member_id VARCHAR(50),
    coin_add VARCHAR(50) NOT NULL,
    coin_use VARCHAR(50) NOT NULL,
    coin_total VARCHAR(50),
    coin_date VARCHAR(20),
    PRIMARY KEY(coin_idx, member_id)
);

CREATE TABLE safe (
    safe_idx VARCHAR(50),
    item_idx VARCHAR(20),
    ord_idx VARCHAR(20),
    member_id VARCHAR(50),
    shop_idx VARCHAR(20),
    safe_coin VARCHAR(50),
    safe_status VARCHAR(3),
    PRIMARY KEY(safe_idx, member_id)
);

CREATE TABLE recentView (
	member_id VARCHAR(50),
	item_idx VARCHAR(20),
	viewTime VARCHAR(30)
);
 CREATE TABLE payment (
	payment_idx VARCHAR(20),
	member_id VARCHAR(50),
	member_phone VARCHAR(13),
	payment_value  VARCHAR(20),
        payment_date VARCHAR(20),
	PRIMARY KEY(payment_idx, member_id)
);


CREATE TABLE notice (
   notice_idx varchar(20) PRIMARY KEY,
   admin_id varchar(20),
   notice_subject varchar(50) NOT NULL,
   notice_content varchar(500) NOT NULL,
   notice_date varchar(20)
);

CREATE TABLE qna (
   qna_idx varchar(20) PRIMARY KEY,
   member_id varchar(50),
   qna_type varchar(20),
   qna_subject varchar(50),
   qna_content varchar(500),
   qna_re_ref INT,
   qna_re_lev INT,
   qna_re_seq INT,
   qna_date varchar(20) NOT NULL,
   qna_status varchar(20),
   qna_secret varchar(3)
);

CREATE TABLE report (
   report_idx varchar(20),
   member_id varchar(50),
   item_idx varchar(20),
   report_type varchar(20) NOT NULL,
   report_subject varchar(50) NOT NULL,
   report_content varchar(500) NOT NULL,
   report_date varchar(20) NOT NULL,
   report_status varchar(5),
   report_secret varchar(1),
   primary key(report_idx, member_id, item_idx)
);

CREATE TABLE msgList (
	msgList_room varchar(20),
	member_id varchar(50),
	shop_idx varchar(20),
  	item_idx varchar(20),
	msgList_status varchar(5),
	PRIMARY KEY (msgList_room, member_id)
);

CREATE TABLE msgChat (
	msgChat_idx varchar(20),
	msgList_room varchar(20),
	msgChat_send varchar(20),
	msgChat_recv varchar(20),
	msgChat_content varchar(500),
	msgChat_time varchar(20),
	PRIMARY KEY (msgChat_idx, msgList_room)
);

CREATE TABLE cancel (
	cancel_idx VARCHAR(20),
	item_idx VARCHAR(20),
	member_id VARCHAR(50),
	ord_idx VARCHAR(20),
	cancel_content VARCHAR(1000),
	cancel_date VARCHAR(20),
	cancel_status VARCHAR(3),
	PRIMARY KEY (cancel_idx,item_idx,member_id)
);

 CREATE TABLE account (
   account_idx VARCHAR(20),
    member_id VARCHAR(50),
   accountName VARCHAR(20),
   bankName VARCHAR(20),
    accountNum VARCHAR(40)
 );


